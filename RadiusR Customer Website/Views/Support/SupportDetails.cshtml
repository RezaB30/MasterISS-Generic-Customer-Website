@model RadiusR_Customer_Website.Models.ViewModels.Supports.SupportMessagesVM

@{
    ViewBag.Title = RadiusRCustomerWebSite.Localization.Common.SupportDetails;
    var FileMaxSize = (long)ViewBag.FileMaxSize;
}

<div class="content-box title shallow-blue">
    <h4>@RadiusRCustomerWebSite.Localization.Common.SupportAndRequests</h4>
</div>
@Html.Partial("SupportDetailsContent")
<div class="content-box">
    <table class="data-table">
        <tbody>
            @if (Model.SupportDisplayType == RadiusR_Customer_Website.Models.ViewModels.Supports.SupportRequestDisplayTypes.OpenRequestAgainDisplay)
            {
                <tr class="seperate">
                    <td>
                        @using (Html.BeginForm("NewSupportMessage", "Support", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.ID)
                            <table class="data-table" style="table-layout:fixed;">
                                <tbody>
                                    <tr>
                                        <td class="borderless" colspan="2">
                                            <div class="centered" style="margin-top:1em;">
                                                @Html.TextAreaFor(m => m.Message, new { @placeholder = RadiusRCustomerWebSite.Localization.Common.SupportRequestMessage, @class = "new-request-text", @maxlength = "250" })
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="borderless">
                                            <div class="centered">
                                                <input onclick="FormSubmit(submitType.SOLVED);" type="button" class="link-button jungle" style="font-size:small;" value="@RadiusRCustomerWebSite.Localization.Common.ProblemSolved" />
                                            </div>
                                        </td>
                                        <td class="borderless">
                                            <div class="centered">
                                                <input onclick="FormSubmit(submitType.OPEN);" type="button" value="@RadiusRCustomerWebSite.Localization.Common.OpenRequestAgain" style="font-size:small;" class="link-button red" />
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        }
                    </td>
                </tr>
            }
            @if (Model.SupportDisplayType == RadiusR_Customer_Website.Models.ViewModels.Supports.SupportRequestDisplayTypes.AddNoteDisplay)
            {
                <tr class="seperate">
                    <td>
                        @using (Html.BeginForm("NewSupportMessage", "Support", FormMethod.Post,new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.ID)
                            <table class="data-table" style="table-layout:fixed;">
                                <tbody>
                                    <tr>
                                        <td class="borderless" colspan="2">
                                            <div class="centered" style="margin-top:1em;">
                                                @Html.TextAreaFor(m => m.Message, new { @placeholder = RadiusRCustomerWebSite.Localization.Common.SupportRequestMessage, @class = "new-request-text", @maxlength = "500" })
                                                @if (ViewBag.CanSendFile)
                                                {
                                                    <div style="color:mediumpurple">
                                                        @string.Format(RadiusRCustomerWebSite.Localization.Common.FileSizeError, (FileMaxSize / 1000000))
                                                    </div>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="borderless">
                                            <div class="centered">
                                                <input onclick="FormSubmit(submitType.SOLVED);" type="button" class="link-button jungle" style="font-size:small;" value="@RadiusRCustomerWebSite.Localization.Common.ProblemSolved" />
                                            </div>
                                        </td>
                                        <td class="borderless">
                                            <div class="centered">
                                                <input onclick="FormSubmit(submitType.ADD);" type="button" value="@RadiusRCustomerWebSite.Localization.Common.AddNote" class="link-button stencil-blue" style="font-size:small;" />
                                                @if (ViewBag.CanSendFile)
                                                {
                                                    <span id="support-attachment-id">
                                                        <img style="vertical-align:middle; cursor:pointer;" src="@Url.Content("~/Content/Images/Icons/attachment.svg")" />
                                                    </span>
                                                }

                                            </div>
                                        </td>
                                    </tr>
                                    @if (ViewBag.CanSendFile)
                                    {
                                        <tr>
                                            <td class="borderless">
                                                <div class="centered">
                                                    <input class="upload-attachments" name="attachments" type="file" style="visibility:hidden;" multiple />
                                                    <ul class="upload-attachment-list mt-1 list-unstyled"></ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </td>
                </tr>
            }
            @foreach (var item in Model.SupportMessageList)
            {
                <tr class="support-message-seperate">
                    <td>
                        @if (item.IsCustomer)
                        {
                            <div class="user-management-icon centered support-right-item">
                                <span class="bold">@Html.DisplayFor(m => item.SenderName)</span>
                                <small>@Html.DisplayFor(m => item.MessageDate)</small>
                            </div>
                            <div style="overflow-wrap:anywhere;" class="message-box shallow-blue multiline-text">
                                @Html.DisplayFor(m => item.Message)
                                <div data-stage="@item.StageId" class="support-file-content"></div>
                            </div>
                        }
                        else
                        {
                            <div class="agent-support-icon centered support-right-item">
                                <span class="bold">@Html.DisplayFor(m => item.SenderName)</span>
                                <small>@Html.DisplayFor(m => item.MessageDate)</small>
                            </div>
                            <div class="message-box light-green multiline-text">
                                @Html.DisplayFor(m => item.Message)
                                <div data-stage="@item.StageId" class="support-file-content"></div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section scripts{
    @Scripts.Render("~/Scripts/Custom/support-attachment.js")
    <script>
        const submitType = {
            SOLVED: 'solved',
            ADD: 'add',
            OPEN: 'open'
        }
        function FormSubmit(_type) {
            if (_type == submitType.ADD) {
                $('#IsSolved').remove();
                $('#ForOpenRequest').remove();
                $('form').append('<input id="ForAddNote" name="ForAddNote" type="hidden" value="True">');
                $('form').submit();
            }
            if (_type == submitType.SOLVED) {
                $('#ForOpenRequest').remove();
                $('#ForAddNote').remove();
                $('form').append('<input id="IsSolved" name="IsSolved" type="hidden" value="True">');
                ShowConfirm($('form'));
            }
            if (_type == submitType.OPEN) {
                $('#IsSolved').remove();
                $('#ForAddNote').remove();
                $('form').append('<input id="ForOpenRequest" name="ForOpenRequest" type="hidden" value="True">');
                ShowConfirm($('form'));
            }
        }
        GetSupportAttachments('@Url.Action("GetSupportAttachments","Support")', '@Model.ID', '@Url.Action("DownloadSupportAttachment","Support")');
    </script>
}